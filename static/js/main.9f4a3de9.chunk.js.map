{"version":3,"sources":["queSlice.js","SetupForm.js","Loading.js","Modal.js","App.js","store.js","index.js"],"names":["getFetchQue","createAsyncThunk","name","thunkApi","a","getState","quiz","category","difficulty","amount","axios","response","data","queSlice","createSlice","initialState","wating","loading","questions","count","cateID","sports","politics","history","score","modal","reducers","increment","state","setDiffculty","action","payload","setCategory","setAmount","setCount","length","nextQues","closeModal","extraReducers","pending","fulfilled","results","rejected","actions","handleFetch","SetupForm","useSelector","dispatch","useDispatch","className","htmlFor","type","id","min","max","value","onChange","e","target","onClick","preventDefault","handleSubmit","Loading","Modal","App","correct_answer","incorrect_answers","question","answers","array","i","j","Math","floor","random","temp","shuffleArray","map","answer","index","key","console","log","configureStore","reducer","queReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9f4a3de9.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nexport const getFetchQue = createAsyncThunk(\r\n  \"quiz/getFetchQue\",\r\n  async (name, thunkApi) => {\r\n    const { category, difficulty, amount } = thunkApi.getState().quiz;\r\n    const response = await axios(\r\n      `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=multiple`\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const queSlice = createSlice({\r\n  name: \"quiz\",\r\n  initialState: {\r\n    wating: true,\r\n    loading: false,\r\n    questions: [],\r\n    count: 0,\r\n    difficulty: \"easy\",\r\n    category: \"21\",\r\n    amount: 10,\r\n    cateID: { sports: 21, politics: 24, history: 23 },\r\n    score: 0,\r\n    modal:false\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.count += 1;\r\n    },\r\n    setDiffculty: (state, action) => {\r\n      state.difficulty = action.payload;\r\n    },\r\n    setCategory: (state, action) => {\r\n      state.category = action.payload;\r\n    },\r\n    setAmount: (state, action) => {\r\n      state.amount = action.payload;\r\n    },\r\n    setCount: (state, action) => {\r\n      if (action.payload) {\r\n        state.score += 1;\r\n      }\r\n      if (state.count < state.questions.length - 1) {\r\n        state.count += 1;\r\n      } else {\r\n        state.modal = true\r\n      }\r\n    },\r\n    nextQues: (state) => {\r\n      if (state.count < state.questions.length - 1) {\r\n        state.count += 1;\r\n      } else {\r\n        state.modal = true\r\n      }\r\n    },\r\n    closeModal :(state) => {\r\n      state.score = 0\r\n      state.count = 0\r\n      state.wating = true;\r\n      state.modal = false\r\n    }\r\n  },\r\n  extraReducers: {\r\n    [getFetchQue.pending]: (state) => {\r\n      state.loading = true;\r\n      state.wating = false;\r\n    },\r\n    [getFetchQue.fulfilled]: (state, action) => {\r\n      state.questions = action.payload.results;\r\n      state.loading = false;\r\n      state.wating = false;\r\n    },\r\n    [getFetchQue.rejected]: (state, action) => {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  increment,\r\n  handleFetch,\r\n  setDiffculty,\r\n  setCategory,\r\n  setAmount,\r\n  setCount,\r\n  nextQues,\r\n  closeModal,\r\n} = queSlice.actions;\r\n\r\nexport default queSlice.reducer;\r\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFetchQue, setDiffculty, setCategory, setAmount } from \"./queSlice\";\nconst SetupForm = () => {\n  const { sports, politics, history } = useSelector(\n    (state) => state.quiz.cateID\n  );\n  const { amount } = useSelector((state) => state.quiz);\n  const dispatch = useDispatch();\n  let handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(getFetchQue());\n  };\n  return (\n    <section className=\"quiz quiz-small\">\n      <form className=\"setup-form\">\n        <h2>setup quiz</h2>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">number of questions</label>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            id=\"amount\"\n            className=\"form-input\"\n            min=\"1\"\n            max=\"50\"\n            value={amount}\n            onChange={(e) => dispatch(setAmount(e.target.value))}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"category\">category</label>\n          <select\n            name=\"category\"\n            id=\"category\"\n            className=\"form-input\"\n            onClick={(e) => dispatch(setCategory(e.target.value))}\n          >\n            <option value={sports}>sports</option>\n            <option value={history}>history</option>\n            <option value={politics}>politics</option>\n          </select>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\">select difficulty</label>\n          <select\n            name=\"difficulty\"\n            id=\"difficulty\"\n            className=\"form-input\"\n            onChange={(e) => dispatch(setDiffculty(e.target.value))}\n          >\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n          </select>\n        </div>\n        <button\n          type=\"submit\"\n          className=\"submit-btn\"\n          onClick={(e) => handleSubmit(e)}\n        >\n          start\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeModal } from \"./queSlice\";\nconst Modal = () => {\n  const {score} = useSelector(state => state.quiz)\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"modal-container isOpen\">\n      <div className=\"modal-content\">\n        <h2>congrats!</h2>\n        <p>You answered {score} of questions correctly</p>\n        <button className=\"close-btn\" onClick={() => dispatch(closeModal())}>\n          play again\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect } from \"react\";\n\nimport SetupForm from \"./SetupForm\";\nimport Loading from \"./Loading\";\nimport Modal from \"./Modal\";\nimport { setCount, nextQues, getFetchQue } from \"./queSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nfunction App() {\n  const { questions, loading, wating, count, score, modal } = useSelector(\n    (state) => state.quiz\n  );\n  const dispatch = useDispatch();\n\n  if (wating) {\n    return <SetupForm />;\n  }\n  if (loading) {\n    return <Loading />;\n  }\n  const { correct_answer, incorrect_answers, question } = questions[count];\n  let answers = [...incorrect_answers, correct_answer];\n  // let answers = incorrect_answers.push(correct_answer);\n\n  /* Randomize array in-place using Durstenfeld shuffle algorithm */\n  let shuffleArray = (array) => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  };\n\n  return (\n    <main>\n      {modal ? (\n        <Modal />\n      ) : (\n        \"\"\n      )}\n      <section className=\"quiz\">\n        <p className=\"correct-answers\">\n          correct answers : {score}/{count}\n        </p>\n        <article className=\"container\">\n          <h2>{question}</h2>\n          <div className=\"btn-container\">\n            {shuffleArray(answers).map((answer, index) => {\n              return (\n                <button\n                  key={index}\n                  className=\"answer-btn\"\n                  onClick={() => dispatch(setCount(correct_answer == answer))}\n                >\n                  {answer}\n                </button>\n              );\n            })}\n          </div>\n        </article>\n        {console.log(questions[count])}\n        <button className=\"next-question\" onClick={() => dispatch(nextQues())}>\n          next question\n        </button>\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport queReducer from './queSlice'\r\nexport default configureStore({\r\n  reducer:{\r\n    quiz:queReducer,\r\n  },\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport store from './store';\nimport {Provider} from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}